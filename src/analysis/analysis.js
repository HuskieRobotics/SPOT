const express = require("express");
const path = require("path")
const fs = require("fs")
let router = express.Router();
const executeAnalysisPipeline = require("./analysisPipeline.js")
const compareAllTeams = require("./autoPick.js")
const { setPath } = require("../lib/util");
const ss = require("simple-statistics")
router.use(express.static(__dirname + "/public"));

router.get("/", (req,res) => {
    res.render(__dirname + "/views/index.ejs");
})

let modulesOutput;
router.get("/modules.js", (req,res) => {
    if (modulesOutput) {
        res.send(modulesOutput) //there might be a better way to do this
    } else {
        let output = `/* autogenerated output of all modules in the /analysis/modules folder */`;
        const moduleList = fs.readdirSync(__dirname + "/modules")
        for (let module of moduleList) {
            const moduleFile = fs.readFileSync(`${__dirname}/modules/${module}/index.js`)
            output += `\n\n//${module}\n`
            output += moduleFile
        }

        output += `\n\n//mapping\nconst moduleClasses = {`
        output += moduleList.join(",\n")
        output += "}"

        // modulesOutput = output;
        res.send(output);
    }
})
router.get('/autoPick',async (req,res)=>{
    let dataset = await executeAnalysisPipeline();
    let teams = [];
    for(const [teamNumber, team] of Object.entries(dataset.teams)){
        if(dataset.tmps.filter(tmp => tmp.robotNumber == teamNumber).length > 0){
            setPath(team, "robotNumber", teamNumber)
            teams.push(team);
        }
    } 
    compareAllTeams(teams);
    res.send(teams.map((team)=>{return {
        "robotNumber":team.robotNumber,
        "avgProbability":team.avgProbability
    }}))
})
let modulesStyleOutput;
router.get("/modules.css", (req,res) => {
    if (modulesStyleOutput) {
        res.send(modulesStyleOutput) //there might be a better way to do this
    } else {
        let output = ""
        for (let module of fs.readdirSync(__dirname + "/modules")) {
            if (module !== "index.js") {
                const moduleFile = fs.readFileSync(`${__dirname}/modules/${module}/style.css`)
                output += moduleFile
            }
        }
        // modulesStyleOutput = output;
        res.type("text/css")
        res.send(output);
    }
})

router.use("/api", require("./routes/api.js"));

module.exports = router;